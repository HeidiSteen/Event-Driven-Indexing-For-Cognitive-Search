// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Wiki.Importer;
//
//    var job = Job.FromJson(jsonString);

namespace Serverless.Indexer
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ParseResults
    {
        [JsonProperty("parse")]
        public Parse Parse { get; set; }
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
    }

    public partial class Parse
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("pageid")]
        public long Pageid { get; set; }

        [JsonProperty("text")]
        public Text Text { get; set; }
    }

    public partial class Text
    {
        [JsonProperty("*")]
        public string Content { get; set; }
    }

    public partial class ParseResults
    {
        public static ParseResults FromJson(string json) => JsonConvert.DeserializeObject<ParseResults>(json, Serverless.Indexer.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
